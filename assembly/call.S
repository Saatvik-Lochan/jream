# THIS IS A FILE GENERATED BY meta_assembly_compile.py APPLIED ON call_m.S
# ASSUME s1 holds a pointer to the pcb
# ASSUME s2 holds a pointer to argument pointer array for all instr
# ASSUME s3 holds a pointer to the argument array for this instr
# ASSUME s4 holds a pointer to the array of all callable cxx funs
# ASSUME s5 holds a pointer to the X register array 

# load label we are going to
# must be a1 since it is implicitly used as an argument when going to compile
# stub
ld a1, 8(s3) # generated from 'load_arg a1, 1'

# check reductions - maybe yields
ld t0, 32(s1) # generated from 'load_shared t0, REDUCTIONS'
bnez t0, 1f

sd a1, 48(s1) # generated from 'store_shared a1, RESUME_LABEL'
li s8, 1# generated from 'exit_because YIELD'
jr s7# cont...
1:
addi t0, t0, -1
sd t0, 32(s1) # generated from 'store_shared t0, REDUCTIONS'

slli a2, a1, 3
add a2, a2, s6
ld t1, 0(a2)

la t0, 2f # load pc relative address at the end
sd t0, 40(s1) # generated from 'store_shared t0, CODE_POINTER'

jr t1
2:
